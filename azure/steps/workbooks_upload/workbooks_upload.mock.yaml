parameters:
  timeoutInMinutes: 5
  byRows: 1
  azurePostLimitMB: 1
  propertiesPath: "$(System.DefaultWorkingDirectory)/$(_crux_repos_root)/$(_crux_workbooks_file)"
  filePathCsv: "$(_crux_results)"
  jmeterArg: "$(_crux_jmeter_args)"
  buildId: "$(Build.BuildId)"
  buildStatus: "$(Agent.JobStatus)"
  pipelineId: "$(System.DefinitionId)"
  workbooksId: ""
  sharedKey: ""
  logType: ""
  usePropertiesFile: $true
steps:
  - task: PowerShell@2
    displayName: Workbooks upload
    timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
    condition: and(not(eq(variables['module.workbooks.enabled'], false)),not(eq(variables.workbooks_enabled, false)))
    inputs:
      arguments: > # Use this to avoid newline characters in multiline string
        -dryRun $true
        -PropertiesPath ${{ parameters.propertiesPath }}
        -UsePropertiesFile ${{ parameters.usePropertiesFile }}
        -WorkbooksId ${{ parameters.workbooksId }}
        -SharedKey ${{ parameters.sharedKey }}
        -LogType ${{ parameters.logType }}
        -FilePathCSV ${{ parameters.filePathCsv }}
        -JmeterArg ${{ parameters.jmeterArg }}
        -BuildId ${{ parameters.buildId }}
        -BuildStatus ${{ parameters.buildStatus }}
        -PipelineId ${{ parameters.pipelineId }}
        -ByRows "${{ parameters.byRows }}"
        -AzurePostLimitMB "${{ parameters.azurePostLimitMB }}"
      filePath: 'modules/workbooks/Workbooks.ps1'
      pwsh: true