jobs:
  - job: arm_and_pester_tests
    condition: not(eq(variables['pester_tests'], false))
    displayName: Modules - tests - arm/pester
    timeoutInMinutes: 5
    pool:
      vmImage: 'windows-latest'
    steps:
      - checkout: crux
        displayName: CRUX clone

      - powershell: |
          New-Item -ItemType Directory -Force -Path $(System.DefaultWorkingDirectory)\arm_ttk_test_results
          New-Item -ItemType Directory -Force -Path $(System.DefaultWorkingDirectory)\modules\pester\results
        displayName: Prepare

      - task: PowerShell@2
        displayName: Run Pester tests with Coverage
        inputs:
          arguments: 'azure'
          filePath: '$(System.DefaultWorkingDirectory)\modules\pester\RunAllTests.ps1'
          pwsh: true

      - task: PublishTestResults@2
        displayName: Publish Pester tests
        inputs:
          testResultsFormat: 'NUnit'
          testResultsFiles: '$(System.DefaultWorkingDirectory)/modules/pester/results/*pesterTEST.xml'
          failTaskOnFailedTests: true

      - script: 'dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.5.8'
        displayName: 'Install ReportGenerator tool'

      - script: 'reportgenerator -reports:"$(System.DefaultWorkingDirectory)/modules/pester/results/*pesterCoverageTEST.xml" -targetdir:"$(System.DefaultWorkingDirectory)/modules/pester/results/" -reporttypes:HtmlInline_AzurePipelines'
        displayName: 'Create reports'

      - task: PublishCodeCoverageResults@1
        displayName: Publish Pester Code Coverage
        inputs:
          codeCoverageTool: 'JaCoCo'
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/modules/pester/results/*pesterCoverageTEST.xml'
          reportDirectory: "$(System.DefaultWorkingDirectory)/modules/pester/results/"

      - task: RunARMTTKTests@1
        displayName: Run ARM TTK tests
        inputs:
          templatelocation: '$(_crux_steps_path)\create_cluster\k8.json'
          resultLocation: '$(System.DefaultWorkingDirectory)\arm_ttk_test_results'

      - task: PublishTestResults@2
        displayName: Publish ARM TTK tests
        condition: always()
        inputs:
          testResultsFormat: 'NUnit'
          testResultsFiles: '$(System.DefaultWorkingDirectory)\arm_ttk_test_results\*-armttk.xml'